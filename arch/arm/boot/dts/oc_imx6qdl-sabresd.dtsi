/*
 * Copyright 2012-2016 Freescale Semiconductor, Inc.
 * Copyright 2011 Linaro Ltd.
 *
 * The code contained herein is licensed under the GNU General Public
 * License. You may obtain a copy of the GNU General Public License
 * Version 2 or later at the following locations:
 *
 * http://www.opensource.org/licenses/gpl-license.html
 * http://www.gnu.org/copyleft/gpl.html
 */

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

/ {

	chosen {
		stdout-path = &uart1;
	};

	memory: memory {
		reg = <0x10000000 0x40000000>;
	};

regulators {
		compatible = "simple-bus";
		#address-cells = <1>;
		#size-cells = <0>;

		reg_usb_otg_vbus: regulator@0 {
			compatible = "regulator-fixed";
			reg = <0>;
			regulator-name = "usb_otg_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			//gpio = <&gpio3 22 0>;
			//enable-active-high;
			//vin-supply = <&swbst_reg>;
		};

		reg_usb_h1_vbus: regulator@1 {
			compatible = "regulator-fixed";
			reg = <1>;
			regulator-name = "usb_h1_vbus";
			regulator-min-microvolt = <5000000>;
			regulator-max-microvolt = <5000000>;
			//gpio = <&gpio7 0 0>;
			//enable-active-high;
			//vin-supply = <&swbst_reg>;
		};

	};

	//gpio-keys {
	//	compatible = "gpio-keys";
	//	pinctrl-names = "default";
	//	pinctrl-0 = <&pinctrl_gpio_keys>;
    //
	//	xxxxxx {
	//		label = "xxxx";
	//		gpios = <&gpio6 8 xxxxxxxx>;
	//		gpio-key,wakeup;
	//		linux,code = <KEY_xxx>;
	//	};
	//};

};

//to be fixed
&ecspi1 {
	fsl,spi-num-chipselects = <1>;
	//cs-gpios = <0>,<0>,<0>;
	cs-gpios = <&gpio2 30 GPIO_ACTIVE_LOW>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi1>;
	status = "okay";

	// to be done
//	adc0@0 {
//		#address-cells = <1>;
//		#size-cells = <1>;
//		compatible = "spidev", "spimh";
//		spi-max-frequency = <2000000>;
//		reg = <0>;
//	};	
//	adc1@1 {
//		#address-cells = <1>;
//		#size-cells = <1>;
//		compatible = "spidev", "spimh";
//		spi-max-frequency = <2000000>;
//		reg = <1>;
//	};

//	adc2@2 {
//		#address-cells = <1>;
//		#size-cells = <1>;
//		compatible = "spidev", "spimh";
//		spi-max-frequency = <2000000>;
//		reg = <2>;
//	};
//
	fpga@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "spidev", "spimh";
		spi-max-frequency = <2000000>;
		reg = <0>;
	};	
};

//to be fixed
&ecspi2 {
	fsl,spi-num-chipselects = <1>;
	cs-gpios = <0>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_ecspi2>;
	status = "okay";

	// to be done
	spidev@0 {
		#address-cells = <1>;
		#size-cells = <1>;
		compatible = "spidev";
		spi-max-frequency = <1000000>;
		reg = <0>;
	};	

};

//okok
&fec {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_enet>;
	phy-mode = "rmii";
	phy-reset-gpios = <&gpio1 23 0>;
	phy-reset-duration = <1>;
	fsl,magic-packet;
	status = "okay";
};

&gpc {
	fsl,ldo-bypass = <1>;
};

&i2c2 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c2>;
	status = "okay";

	pmic: pfuze100@08 {
		compatible = "fsl,pfuze100";
		reg = <0x08>;

		regulators {
			sw1a_reg: sw1ab {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw1c_reg: sw1c {
				regulator-min-microvolt = <300000>;
				regulator-max-microvolt = <1875000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw2_reg: sw2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
				regulator-boot-on;
				regulator-always-on;
				regulator-ramp-delay = <6250>;
			};

			sw3a_reg: sw3a {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw3b_reg: sw3b {
				regulator-min-microvolt = <400000>;
				regulator-max-microvolt = <1975000>;
				regulator-boot-on;
				regulator-always-on;
			};

			sw4_reg: sw4 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <3300000>;
			};

			swbst_reg: swbst {
				regulator-min-microvolt = <5000000>;
				regulator-max-microvolt = <5150000>;
			};

			snvs_reg: vsnvs {
				regulator-min-microvolt = <1000000>;
				regulator-max-microvolt = <3000000>;
				regulator-boot-on;
				regulator-always-on;
			};

			vref_reg: vrefddr {
				regulator-boot-on;
				regulator-always-on;
			};

			vgen1_reg: vgen1 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen2_reg: vgen2 {
				regulator-min-microvolt = <800000>;
				regulator-max-microvolt = <1550000>;
			};

			vgen3_reg: vgen3 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
			};

			vgen4_reg: vgen4 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen5_reg: vgen5 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};

			vgen6_reg: vgen6 {
				regulator-min-microvolt = <1800000>;
				regulator-max-microvolt = <3300000>;
				regulator-always-on;
			};
		};
	};

	lm75a@49 {
		compatible = "nxp,lm75a";
		reg = <0x49>;
	};
};

&i2c3 {
	clock-frequency = <100000>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_i2c3>;
	status = "okay";
	
	ds3231@68 {
		compatible = "rtc,ds3231";
		reg = <0x68>;
	};
};

&iomuxc {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_hog>;

	imx6qdl-sabresd {
		pinctrl_hog: hoggrp {
			fsl,pins = <
				/*OUTPUT*/                              
				//MX6QDL_PAD_NANDF_CS0__GPIO6_IO11			0x4001B0B0		// PCIE_DISABL
				//MX6QDL_PAD_NANDF_CS1__GPIO6_IO14			0x4001B0B0		// PCIE_RST  
				MX6QDL_PAD_NANDF_CS2__GPIO6_IO15            0x4001B0B0		// 3.3V_OUT2
				MX6QDL_PAD_GPIO_7__GPIO1_IO07              0x4001B0B0		// /SLEEP : step motor drv sleep
				MX6QDL_PAD_DISP0_DAT16__GPIO5_IO10			0x4001B0B0  	// /X_RST
				MX6QDL_PAD_DISP0_DAT23__GPIO5_IO17			0x4001B0B0  	// /Y_RST
				MX6QDL_PAD_DISP0_DAT11__GPIO5_IO05			0x4001B0B0   	// /Z_RST
				MX6QDL_PAD_DISP0_DAT13__GPIO5_IO07         0x4001B0B0		// /RESET : step motor drv reset					
				MX6QDL_PAD_DISP0_DAT8__GPIO4_IO29          0x4001B0B0		// 12V_EN
				MX6QDL_PAD_DISP0_DAT1__GPIO4_IO22          0x4001B0B0		// MX 
				MX6QDL_PAD_DISP0_DAT3__GPIO4_IO24          0x4001B0B0		// MY
				MX6QDL_PAD_DI0_PIN15__GPIO4_IO17           0x4001B0B0		// MZ
				MX6QDL_PAD_DI0_DISP_CLK__GPIO4_IO16			0x4001B0B0		// 3231 RST
				MX6QDL_PAD_SD1_DAT3__GPIO1_IO21				0x4001B0B0		// WDI
				MX6QDL_PAD_DISP0_DAT6__GPIO4_IO27          0x4001B0B0		// DM_VDD_EN
				MX6QDL_PAD_DISP0_DAT21__GPIO5_IO15         0x4001B0B0		// DMX_EN
				MX6QDL_PAD_DISP0_DAT2__GPIO4_IO23          0x4001B0B0		// DMY_EN2
				MX6QDL_PAD_DISP0_DAT10__GPIO4_IO31         0x4001B0B0		// DMZ_EN
				MX6QDL_PAD_NANDF_CLE__GPIO6_IO07           0x4001B0B0		// X_SYNC
				MX6QDL_PAD_NANDF_WP_B__GPIO6_IO09          0x4001B0B0		// Y_SYNC
				MX6QDL_PAD_SD1_CLK__GPIO1_IO20             0x4001B0B0		// Z_SYNC
				MX6QDL_PAD_DISP0_DAT22__GPIO5_IO16         0x4001B0B0		// B1
				MX6QDL_PAD_DISP0_DAT14__GPIO5_IO08         0x4001B0B0		// B0
				MX6QDL_PAD_DISP0_DAT17__GPIO5_IO11         0x4001B0B0		// A1
				MX6QDL_PAD_DISP0_DAT9__GPIO4_IO30          0x4001B0B0		// A0
				MX6QDL_PAD_DISP0_DAT12__GPIO5_IO06         0x4001B0B0		// BPHASE
				MX6QDL_PAD_DISP0_DAT5__GPIO4_IO26          0x4001B0B0       // BENBL
				MX6QDL_PAD_DISP0_DAT7__GPIO4_IO28          0x4001B0B0		// AENBL
				MX6QDL_PAD_DISP0_DAT0__GPIO4_IO21          0x4001B0B0		// APHASE
				MX6QDL_PAD_DI0_PIN2__GPIO4_IO18            0x4001B0B0		// DECAY
				MX6QDL_PAD_GPIO_4__GPIO1_IO04              0x4001B0B0		// DAC LDACn
				MX6QDL_PAD_SD2_DAT0__GPIO1_IO15            0x4001B0B0		// CLOCK_EN
				MX6QDL_PAD_SD2_CLK__GPIO1_IO10             0x4001B0B0		// /GPS_RESET 必须弱上拉
				MX6QDL_PAD_CSI0_DATA_EN__GPIO5_IO20        0x4001B0B0		// CCE
				MX6QDL_PAD_CSI0_DAT12__GPIO5_IO30          0x4001B0B0		//FPGA data FIFO的写满告警，高电平写满 - IN
				MX6QDL_PAD_CSI0_MCLK__GPIO5_IO19      	   0x4001B0B0		//FPGA data FIFO的写满100点指示，高电平有效  - IN
				MX6QDL_PAD_CSI0_DAT4__GPIO5_IO22           0x4001B0B0		//控制ADC复位，低电平复位
				MX6QDL_PAD_CSI0_DAT5__GPIO5_IO23           0x4001B0B0		//控制ADC同步采样启动，需要保持1秒高电平

				/*INPUT*/
				MX6QDL_PAD_DI0_PIN3__GPIO4_IO19            0x4001B0B0		// PRODUCTION CK 感觉没必要，必然是有的
				MX6QDL_PAD_NANDF_CS3__GPIO6_IO16           0x4001B0B0		//	/FALUT X: Logic low when drv8812 in fault condition
				MX6QDL_PAD_DISP0_DAT20__GPIO5_IO14         0x4001B0B0		// 3231 INT
				MX6QDL_PAD_SD2_DAT3__GPIO1_IO12            0x4001B0B0		// 1PPS GPS INT
				MX6QDL_PAD_NANDF_ALE__GPIO6_IO08           0x4001B0B0		// DRDY
				MX6QDL_PAD_KEY_COL0__GPIO4_IO06            0x4001B0B0		//FPGA 电源使能开关，高电平打开电源 - OUT
				MX6QDL_PAD_GPIO_8__GPIO1_IO08              0x4001B0B0		//FPGA 复位，低电平有效  - OUT
				MX6QDL_PAD_CSI0_DAT15__GPIO6_IO01          0x4001B0B0		//FPGA 备用
				MX6QDL_PAD_CSI0_PIXCLK__GPIO5_IO18   	   0x4001B0B0		//FPGA 备用
				MX6QDL_PAD_CSI0_VSYNC__GPIO5_IO21          0x4001B0B0		//FPGA 备用
                MX6QDL_PAD_SD3_CLK__GPIO7_IO03             0x4001B0B0	    //Y向限位开关
                MX6QDL_PAD_SD3_CMD__GPIO7_IO02             0x4001B0B0   	//Y向限位开关
                MX6QDL_PAD_SD3_DAT0__GPIO7_IO04            0x4001B0B0   	//Z向限位开关
                MX6QDL_PAD_SD3_DAT1__GPIO7_IO05            0x4001B0B0   	//Z向限位开关
                MX6QDL_PAD_SD3_DAT2__GPIO7_IO06            0x4001B0B0   	//X向限位开关
                MX6QDL_PAD_SD3_DAT3__GPIO7_IO07            0x4001B0B0	    //X向限位开关
				>;
		};
             
             
		//done
		pinctrl_ecspi1: ecspi1grp {
			fsl,pins = <
				//MX6QDL_PAD_EIM_EB2__ECSPI1_SS0             0x0001B0B0
				//MX6QDL_PAD_DISP0_DAT15__ECSPI1_SS1         0x0001B0B0
				//MX6QDL_PAD_KEY_ROW2__ECSPI1_SS2            0x0001B0B0
				//MX6QDL_PAD_EIM_EB2__GPIO2_IO30             0x100b1
				//MX6QDL_PAD_DISP0_DAT15__GPIO5_IO09         0x100b1
				//MX6QDL_PAD_KEY_ROW2__GPIO4_IO11            0x100b1
				//MX6QDL_PAD_EIM_D16__ECSPI1_SCLK            0x100b1
				//MX6QDL_PAD_EIM_D17__ECSPI1_MISO            0x100b1
				//MX6QDL_PAD_EIM_D18__ECSPI1_MOSI            0x100b1
				MX6QDL_PAD_GPIO_19__GPIO4_IO05             0x0001B0B0	
				MX6QDL_PAD_EIM_EB2__GPIO2_IO30             0x0001B0B1
//				MX6QDL_PAD_DISP0_DAT15__GPIO5_IO09         0x0001B0B1
//				MX6QDL_PAD_KEY_ROW2__GPIO4_IO11            0x0001B0B1
				MX6QDL_PAD_EIM_D16__ECSPI1_SCLK            0x0001B0B1
				MX6QDL_PAD_EIM_D17__ECSPI1_MISO            0x0001B0B1
				MX6QDL_PAD_EIM_D18__ECSPI1_MOSI            0x0001B0B1
			>;
		};
		
		//done
		pinctrl_ecspi2: ecspi2grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_RW__ECSPI2_SS0              0x0000B0B1
				MX6QDL_PAD_EIM_CS0__ECSPI2_SCLK            0x0000B0B1
				MX6QDL_PAD_EIM_CS1__ECSPI2_MOSI            0x0000B0B1
			>;
		};
		
		//done
		pinctrl_enet: enetgrp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_16__ENET_REF_CLK           0x0001B0B0
				MX6QDL_PAD_GPIO_18__GPIO7_IO13             0x0001B0B0
				MX6QDL_PAD_ENET_TXD0__ENET_TX_DATA0        0x0001B0B0
				MX6QDL_PAD_ENET_TXD1__ENET_TX_DATA1        0x0001B0B0
				MX6QDL_PAD_ENET_TX_EN__ENET_TX_EN          0x0001B0B0
				MX6QDL_PAD_ENET_RX_ER__ENET_RX_ER          0x0001B0B0
				MX6QDL_PAD_ENET_RXD0__ENET_RX_DATA0        0x0001B0B0
				MX6QDL_PAD_ENET_RXD1__ENET_RX_DATA1        0x0001B0B0
				MX6QDL_PAD_ENET_REF_CLK__GPIO1_IO23        0x0001B0B0
				MX6QDL_PAD_ENET_CRS_DV__ENET_RX_EN         0x0001B0B0
				MX6QDL_PAD_ENET_MDC__ENET_MDC              0x0001B0B0
				MX6QDL_PAD_ENET_MDIO__ENET_MDIO            0x0001B0B0
			>;
		};

		////to be done
		//pinctrl_gpio_keys: gpio_keysgrp {
		//	fsl,pins = <
		//		
		//	>;
		//};
		
		//done
		pinctrl_i2c2: i2c2grp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL3__I2C2_SCL              0x4001b8b1
				MX6QDL_PAD_KEY_ROW3__I2C2_SDA              0x4001b8b1
			>;
		};

		//done
		pinctrl_i2c3: i2c3grp {
			fsl,pins = <
				MX6QDL_PAD_GPIO_3__I2C3_SCL                0x4001b8b1
                MX6QDL_PAD_GPIO_6__I2C3_SDA                0x4001b8b1
			>;
		};
		
		
		pinctrl_flexcan2: flexcan2grp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL4__FLEXCAN2_TX           0x0001B0B1
				MX6QDL_PAD_KEY_ROW4__FLEXCAN2_RX           0x000130B1
			>;
		};
		
		pinctrl_uart1: uart1grp {
			fsl,pins = <
				MX6QDL_PAD_CSI0_DAT10__UART1_TX_DATA       0x0001B0B0
				MX6QDL_PAD_CSI0_DAT11__UART1_RX_DATA       0x0001B0B0
			>;
		};
 		pinctrl_uart3: uart3grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D24__UART3_TX_DATA          0x0001B0B0
				MX6QDL_PAD_EIM_D25__UART3_RX_DATA          0x0001B0B0
			>;
		};
		pinctrl_uart5: uart5grp {
			fsl,pins = <
				MX6QDL_PAD_KEY_COL1__UART5_TX_DATA         0x0001B0B0
				MX6QDL_PAD_KEY_ROW1__UART5_RX_DATA         0x0001B0B0
			>;
		};

		pinctrl_usdhc2: usdhc2grp {
			fsl,pins = <
			
			>;
		};

		pinctrl_usdhc3: usdhc3grp {
			fsl,pins = <
				MX6QDL_PAD_SD3_CLK__SD3_CLK                0x0001B0B1
				MX6QDL_PAD_SD3_CMD__SD3_CMD                0x0001B0B1
                MX6QDL_PAD_SD3_DAT0__SD3_DATA0             0x0001B0B1
                MX6QDL_PAD_SD3_DAT1__SD3_DATA1             0x0001B0B1
                MX6QDL_PAD_SD3_DAT2__SD3_DATA2             0x0001B0B1
                MX6QDL_PAD_SD3_DAT3__SD3_DATA3             0x0001B0B1
				MX6QDL_PAD_SD3_RST__GPIO7_IO08             0x0001B0B1
				MX6QDL_PAD_KEY_COL2__GPIO4_IO10            0x0001B0B1
			>;
		};
		
		pinctrl_usdhc4: usdhc4grp {
			fsl,pins = <
				// emmc 
				MX6QDL_PAD_SD4_CMD__SD4_CMD		0x17059
				MX6QDL_PAD_SD4_CLK__SD4_CLK		0x10059
				MX6QDL_PAD_SD4_DAT0__SD4_DATA0		0x17059
				MX6QDL_PAD_SD4_DAT1__SD4_DATA1		0x17059
				MX6QDL_PAD_SD4_DAT2__SD4_DATA2		0x17059
				MX6QDL_PAD_SD4_DAT3__SD4_DATA3		0x17059
				MX6QDL_PAD_SD4_DAT4__SD4_DATA4		0x17059
				MX6QDL_PAD_SD4_DAT5__SD4_DATA5		0x17059
				MX6QDL_PAD_SD4_DAT6__SD4_DATA6		0x17059
				MX6QDL_PAD_SD4_DAT7__SD4_DATA7		0x17059
			>;
		};

		//usb
		pinctrl_usbh1: usbh1grp {
			fsl,pins = <
				MX6QDL_PAD_EIM_D30__USB_H1_OC              0x0001B0B0
				MX6QDL_PAD_SD3_DAT5__GPIO7_IO00            0x0001B0B0
			>;
		};
		
		pinctrl_usbotg: usbotggrp {
			fsl,pins = <
				//MX6QDL_PAD_EIM_D22__GPIO3_IO22             0x000130B0		//OTG_PWR_EN
				MX6QDL_PAD_GPIO_1__USB_OTG_ID              0x0001B0B0
				//MX6QDL_PAD_EIM_D21__USB_OTG_OC             0x0001B0B0
			>;
		};
		
	};

};

&snvs_poweroff {
	status = "okay";
};

&ssi2 {
	status = "okay";
};

&uart1 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_uart1>;
	status = "okay";
};
&uart3 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_uart3>;
		status = "okay";
};
&uart5 {
		pinctrl-names = "default";
		pinctrl-0 = <&pinctrl_uart5>;
		status = "okay";
};

&usbh1 {
	vbus-supply = <&reg_usb_h1_vbus>;
	disable-over-current; // to be checked
	status = "okay";
};

&usbotg {
	vbus-supply = <&reg_usb_otg_vbus>;
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usbotg>;
	disable-over-current;
	status = "okay";
};

&usdhc2 {
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc2>;
	bus-width = <8>;
	no-1-8-v;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	status = "disabled";
};

&usdhc3 {
//sdcard
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc3>;
	bus-width = <8>;
	cd-gpios = <&gpio4 10 GPIO_ACTIVE_LOW>;
	wp-gpios = <&gpio7 8 GPIO_ACTIVE_HIGH>;
	no-1-8-v;
	keep-power-in-suspend;
	enable-sdio-wakeup;
	status = "okay";
};

&usdhc4 {
//emmc
	pinctrl-names = "default";
	pinctrl-0 = <&pinctrl_usdhc4>;
	bus-width = <8>;
	non-removable;
	no-1-8-v;
	keep-power-in-suspend;
	status = "okay";
};
&wdog2 {
	status = "disabled";
};

&can2 {
        pinctrl-names = "default";
        pinctrl-0 = <&pinctrl_flexcan2>;
        status = "okay";
};
